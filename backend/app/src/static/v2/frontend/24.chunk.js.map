{"version":3,"sources":["webpack:///./src/houseListing/views/forms/FormCommon.css","webpack:///./src/houseListing/views/forms/FormCommon.css?3f61","webpack:///./src/houseListing/views/forms/neighbourhoodDescriptors/NeighbourhoodDescriptorsComponent.js","webpack:///./src/houseListing/views/forms/neighbourhoodDescriptors/NeighbourhoodDescriptorsContainer.js"],"names":["NeighborhoodDescriptorsComponent","props","addField","commonStyles","pageTitle","otherDescription","e","onOtherDescriptionChange","target","value","Object","entries","data","map","toString","onNBDescriptorChange","marginTop","input","key","onNBDescriptorAdd","NeighbourhoodDescriptor","getData","onChange","objReference","checked","NeighbourhoodDescriptorsContainer","formID","setState","prevState","house","setData","navContext","updateFormState","sync","text","descriptors","update","id","verbose","focus","onNBDescriptorUpdate","objID","updateObject","onSave","stopPropagation","that","Promise","resolve","reject","req1Done","req2Done","postNeighbourhoodDescriptors","houseUUID","state","then","result","rules","updateStatus","getCurrentFormState","errorData","patchHouseData","error","APIModelListAdapter","House","cache","undefined","mainDataCache","loadForm","status","getNeighbourhoodDescriptors","getHouseData","updateStoreObject","unloadForm","getObjects","Component"],"mappings":"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","file":"24.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"._27ruxPq0KQM3SyR5f456h1 {\\n    font-size: 20px;\\n    font-weight: 700;\\n    color: #000000;\\n    margin-top: 50px;\\n    margin-bottom: 50px;\\n}\\n\\n._27ruxPq0KQM3SyR5f456h1 i {\\n    background-image: url('/static/image/popover.svg');\\n    background-repeat: no-repeat;\\n    background-position: center right;\\n    margin-left: 30px;\\n    width: 16px;\\n    height: 16px;\\n    cursor: alias;\\n    font-style: unset;\\n    margin-bottom: -4px;\\n    font-size: 13px;\\n    font-weight: 400;\\n    color: #8f8f8f;\\n    padding-right: 26px;\\n}\\n\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"pageTitle\": \"_27ruxPq0KQM3SyR5f456h1\"\n};","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!./FormCommon.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!./FormCommon.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!./FormCommon.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport commonStyles from \"../FormCommon.css\";\n\nexport function NeighborhoodDescriptorsComponent(props) {\n    let addField;\n    return (\n        <React.Fragment>\n            <div id=\"form-8\" className=\"form-series\">\n                <div className=\"row\">\n                    <div className=\"col-md-1\"/>\n                    <div className=\"col-md-10\">\n                        <h1 className={commonStyles.pageTitle}>What is the neighbourhood like?</h1>\n                        <div className=\"black-textarea\">\n                            <div className=\"row\">\n                                <div className=\"col-md-9 col-lg-9 col-xl-6\">\n                                    <div className=\"textarea\">\n                                        <textarea\n                                            name=\"main-form-neighbourhood_description\" rows=\"8\" cols=\"40\"\n                                            className=\"form-control\" id=\"id_main-form-neighbourhood_description\"\n                                            placeholder=\"Examples -&#10;10 min walk to university&#10;5 min walk to bus stop or train station&#10;15 min walk to shipping centre\"\n                                            value={props.otherDescription}\n                                            onChange={(e) => props.onOtherDescriptionChange(e.target.value)}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <h1 className={commonStyles.pageTitle}>What facilities are there around the area?</h1>\n                        <div className=\"selection\">\n                            <div className=\"btn-group btn-group-toggle\">\n                                {Object.entries(props.data).map((data) =>\n                                    <NeighbourhoodDescriptor\n                                        data={data[1]} key={data[0].toString()}\n                                        onChange={props.onNBDescriptorChange}\n                                        objReference={data[0]}\n                                    />\n                                )}\n                            </div>\n\n                            <div className=\"row\" style={{marginTop: '50px'}}>\n                                <div className=\"col-md-6\">\n                                    <div className=\"input big no-background\">\n                                        <input\n                                            type=\"text\" className=\"form-control anything-else\"\n                                            placeholder=\"Add other facilities\"\n                                            ref={(input) => {\n                                                addField = input;\n                                            }}\n                                            onKeyPress={(e) => {\n                                                if (e.key === 'Enter') {\n                                                    props.onNBDescriptorAdd(addField)\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-2\">\n                                    <button type=\"button\" className=\"default-button-style\"\n                                            onClick={() => props.onNBDescriptorAdd(addField)}>Add\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-1\"/>\n                </div>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\n\nfunction NeighbourhoodDescriptor(props) {\n    return (\n        <label className={\"nearby-facility btn btn-link\" + (props.data.getData('checked') ? \" active\" : \"\")}>\n            <input type=\"checkbox\" className=\"nearby-facility\" onChange={(e) => {\n                props.onChange(props.objReference, e.target.checked)\n            }} checked={props.data.getData('checked')}\n            />\n            {props.data.getData('verbose')}\n        </label>\n    )\n\n}","import React, {Component} from 'react';\nimport {APIModelListAdapter} from \"../../../../core/utils/ModelHelper\";\nimport {House, NeighbourhoodDescriptor} from \"../../../models\";\nimport {getHouseData, getNeighbourhoodDescriptors, patchHouseData, postNeighbourhoodDescriptors} from \"../../../services\";\nimport {NeighborhoodDescriptorsComponent} from \"./NeighbourhoodDescriptorsComponent\";\n\n\nexport default class NeighbourhoodDescriptorsContainer extends Component {\n    formID = 8;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            descriptors: new APIModelListAdapter([], NeighbourhoodDescriptor, 'id', 'empty'),\n            house: new House({}, 'empty'),\n        };\n        if (props.cache.data !== undefined) {\n            this.state.descriptors = props.cache.data;\n        }\n        if (props.mainDataCache.data !== undefined) {\n            this.state.house = props.mainDataCache.data;\n        }\n    }\n\n    componentDidMount() {\n        this.props.navContext.data.loadForm(this.formID, this.onSave, ['initial', 'initial'], \"Neighbourhood\");\n        if (this.state.descriptors.status === 'empty') {\n            getNeighbourhoodDescriptors(this.props.houseUUID)\n                .then(result => {\n                    this.setState(prevState => (\n                        {\n                            ...prevState,\n                            descriptors: result,\n                        })\n                    );\n                    this.props.navContext.data.updateFormState(this.formID, this.state.descriptors.status, 0);\n                    this.props.navContext.sync();\n                });\n        } else {\n            this.props.navContext.data.updateFormState(this.formID, this.state.descriptors.status, 0);\n        }\n\n        if (this.state.house.status === 'empty') {\n            // Fetch house details\n            getHouseData(this.props.houseUUID)\n                .then(result => {\n                    this.setState(prevState => (\n                        {\n                            ...prevState,\n                            house: result,\n                        })\n                    );\n                    this.props.navContext.data.updateFormState(this.formID, this.state.house.status, 1);\n                    this.props.navContext.sync();\n                });\n        } else {\n            this.props.navContext.data.updateFormState(this.formID, this.state.house.status, 1);\n        }\n        this.props.navContext.sync();\n    }\n\n    componentWillUnmount() {\n        this.props.cache.updateStoreObject('neighborhoodDescriptorsData', () => this.state.descriptors);\n        this.props.cache.updateStoreObject('mainData', () => this.state.house);\n        this.props.navContext.data.unloadForm();\n    }\n\n    onOtherDescriptionChange = (value) => {\n        this.setState(prevState => ({\n            ...prevState,\n            house: prevState.house.setData('neighbourhoodDescription', value)\n        }));\n        this.props.navContext.data.updateFormState(this.formID, 'hasChanged', 1);\n        this.props.navContext.sync();\n    };\n\n    onNBDescriptorAdd = (input) => {\n        let text = input.value;\n        if (text !== \"\") {\n            this.setState(prevState => ({\n                    descriptors: prevState.descriptors.update(new NeighbourhoodDescriptor({id: null, verbose: text, checked: true}, 'hasChanged'), text)\n                })\n            );\n\n            input.value = \"\";\n\n            this.props.navContext.data.updateFormState(this.formID, 'hasChanged', 0);\n            this.props.navContext.sync();\n        }\n        input.focus();\n\n    };\n\n    onNBDescriptorUpdate = (objID, value) => {\n        this.setState(prevState => ({\n                ...prevState,\n                data: prevState.descriptors.updateObject(objID, 'checked', value)\n            })\n        );\n        this.props.navContext.data.updateFormState(this.formID, 'hasChanged', 0);\n        this.props.navContext.sync();\n    };\n\n    onSave = (e) => {\n         e.stopPropagation();\n        const that = this;\n        return new Promise((resolve, reject) => {\n            let req1Done = false;\n            let req2Done = false;\n\n            postNeighbourhoodDescriptors(that.props.houseUUID, that.state.descriptors)\n                .then(result => {\n                    that.setState(prevState => (\n                        {\n                            ...prevState,\n                            rules: prevState.descriptors.updateStatus('saved'),\n                        })\n                    );\n                    req1Done = true;\n                    that.props.navContext.data.updateFormState(that.formID, 'saved', 0);\n                    that.props.navContext.sync();\n                    if (req1Done && req2Done) {\n                        if (that.props.navContext.data.getCurrentFormState() === 'error') {\n                            reject()\n                        } else {\n                            resolve()\n                        }\n                    }\n                })\n                .catch(errorData => {\n                    req1Done = true;\n                    that.props.navContext.data.updateFormState(that.formID, 'error', 0);\n                    that.props.navContext.sync();\n                    if (req1Done && req2Done) {\n                        reject()\n                    }\n                });\n\n            patchHouseData(that.props.houseUUID, that.state.house)\n                .then(house => {\n                    that.setState(prevState => (\n                        {\n                            ...prevState,\n                            house: house,\n                        })\n                    );\n                    req2Done = true;\n                    that.props.navContext.data.updateFormState(that.formID, 'saved', 1);\n                    that.props.navContext.sync();\n                   if (req1Done && req2Done) {\n                        if (that.props.navContext.data.getCurrentFormState() === 'error') {\n                            reject()\n                        } else {\n                            resolve()\n                        }\n                    }\n                })\n                .catch(error => {\n                    req2Done = true;\n                    that.props.navContext.data.updateFormState(that.formID, 'error', 1);\n                    that.props.navContext.sync();\n                    if (req1Done && req2Done) {\n                        reject()\n                    }\n                })\n\n        })\n    };\n\n    render() {\n        return(\n            <NeighborhoodDescriptorsComponent\n                data={this.state.descriptors.getObjects()}\n                otherDescription={this.state.house.getData('neighbourhoodDescription')}\n                onOtherDescriptionChange={this.onOtherDescriptionChange}\n                onNBDescriptorChange={this.onNBDescriptorUpdate}\n                onNBDescriptorAdd = {this.onNBDescriptorAdd}\n            />\n        )\n    }\n\n}"],"sourceRoot":""}
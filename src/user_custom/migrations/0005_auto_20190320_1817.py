# Generated by Django 2.0.4 on 2019-03-20 18:17

from django.db import migrations
from django.core.exceptions import ObjectDoesNotExist


def add_user_accounts_with_stripe(apps, schema_editor):
    PaymentGateway = apps.get_model('payment_gateway', 'PaymentGateway')
    User = apps.get_model('user_custom', 'User')
    Account = apps.get_model('user_custom', 'Account')

    stripe = PaymentGateway.objects.get(name='Stripe', code='stripe')
    users = User.objects.all()
    for user in users:
        try:
            account = user.account_set.get(payment_gateway=stripe)
            details = dict()
            if account.details.get('customer_id'):
                details['customer_id'] = account.details.get('customer_id')
            elif user.tenant.customer_id:
                details['customer_id'] = user.tenant.customer_id
            if account.details.get('account_id'):
                details['account_id'] = account.details.get('account_id')
            elif user.home_owner.account_id:
                details['account_id'] = user.home_owner.account_id
            account.details = details
            account.save()
        except ObjectDoesNotExist:
            details = dict()
            account = Account(user=user, payment_gateway=stripe)
            if user.tenant.customer_id:
                details['customer_id'] = user.tenant.customer_id
            if user.home_owner.account_id:
                details['account_id'] = user.home_owner.account_id
            account.details = details
            account.save()


class Migration(migrations.Migration):

    dependencies = [
        ('user_custom', '0004_auto_20190319_1214'),
    ]

    operations = [
        migrations.RunPython(add_user_accounts_with_stripe),
    ]

# Generated by Django 2.0.4 on 2018-11-19 22:31

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.fields.ranges
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import house.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('essentials', '0001_initial'),
        ('cities', '0011_auto_20180108_0706'),
        ('home_owner', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('house_meta', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('tenant_meta', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('rent', models.PositiveIntegerField()),
                ('meta', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('date', django.contrib.postgres.fields.ranges.DateRangeField(verbose_name='stay dates')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('D', 'Declined'), ('T', 'Timeout'), ('E', 'Transaction Error')], default='P', max_length=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_state', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('D', 'Declined'), ('T', 'Timeout'), ('E', 'Transaction Error')], max_length=1)),
                ('new_state', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('D', 'Declined'), ('T', 'Timeout'), ('E', 'Transaction Error')], max_length=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dates', django.contrib.postgres.fields.ranges.DateRangeField()),
                ('periodic', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CancellationPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose', models.TextField(verbose_name='Policy Name')),
                ('description', models.TextField()),
                ('properties', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('official_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='essentials.Policy')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose', models.CharField(max_length=50)),
                ('system_default', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HomeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('space_style', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Property Name')),
                ('furnished', models.BooleanField(default=False)),
                ('address_hidden', models.TextField(blank=True, help_text='This is not visible to others unless a booking is made.', verbose_name='Unit Number or House Number')),
                ('address', models.TextField(blank=True, verbose_name='Street Name')),
                ('bedrooms', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Number of Bedrooms')),
                ('bathrooms', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Number of Bathrooms')),
                ('parking', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Number of parking spaces')),
                ('rent', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Per Week in AUD')),
                ('min_stay', models.PositiveSmallIntegerField(blank=True, default=28, help_text='In days. Minimum and Default is 4 weeks (28 days).', null=True, validators=[django.core.validators.MinValueValidator(28)], verbose_name='Minimum length of stay')),
                ('max_stay', models.PositiveSmallIntegerField(blank=True, help_text='in days. 0 signifies no limit.', null=True, verbose_name='Maximum length of stay')),
                ('other_rules', models.TextField(blank=True)),
                ('other_people_description', models.TextField(blank=True)),
                ('access_restrictions', models.TextField(blank=True)),
                ('neighbourhood_description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('I', 'Inactive'), ('P', 'Published'), ('D', 'Deleted')], default='I', max_length=1)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('cancellation_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='house.CancellationPolicy')),
                ('facilities', models.ManyToManyField(blank=True, to='house.Facility')),
                ('home_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='houses', to='home_owner.HomeOwnerProfile', verbose_name='property owner')),
                ('home_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='house.HomeType', verbose_name='Home Type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cities.PostalCode', verbose_name='location')),
            ],
        ),
        migrations.CreateModel(
            name='HouseProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(default=100)),
                ('house', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='house.House')),
            ],
        ),
        migrations.CreateModel(
            name='HouseRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('comment', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='house.House')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('image', models.ImageField(upload_to=house.models.get_file_path)),
                ('is_thumbnail', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='house.House')),
            ],
        ),
        migrations.CreateModel(
            name='NeighbourhoodDescriptor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose', models.CharField(max_length=50)),
                ('system_default', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose', models.CharField(max_length=50)),
                ('options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WelcomeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose', models.CharField(max_length=50)),
                ('system_default', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='houserule',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='house.Rule'),
        ),
        migrations.AddField(
            model_name='house',
            name='neighbourhood_facilities',
            field=models.ManyToManyField(blank=True, to='house.NeighbourhoodDescriptor'),
        ),
        migrations.AddField(
            model_name='house',
            name='rules',
            field=models.ManyToManyField(blank=True, through='house.HouseRule', to='house.Rule'),
        ),
        migrations.AddField(
            model_name='house',
            name='welcome_tags',
            field=models.ManyToManyField(blank=True, to='house.WelcomeTag'),
        ),
        migrations.AddField(
            model_name='availability',
            name='house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='house.House'),
        ),
    ]

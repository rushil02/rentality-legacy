"""
Django settings for rentality project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

# BASE DIR
from .common import *

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env_var('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = get_env_var('DEBUG')

ALLOWED_HOSTS = ['.rentality.com.au', ]

# Distributed settings
if DEBUG:
    from .development import *

    ALLOWED_HOSTS += ['127.0.0.1', 'localhost']
else:
    from .production import *

    ALLOWED_HOSTS += ['128.199.117.242', '167.99.77.213']

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',
    'django.contrib.flatpages',
    'django.contrib.sitemaps',
    'django.contrib.gis',

    'debug_toolbar',
    'channels',
    'cities',
    'rest_framework',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'easy_thumbnails',
    'formtools',

    # all-auth providers
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.instagram',
    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.pinterest',

    'user_custom.apps.UserCustomConfig',
    'admin_custom.apps.AdminCustomConfig',
    'staff.apps.StaffConfig',
    'landlord.apps.LandlordConfig',
    'house.apps.HouseConfig',
    'tenant.apps.TenantConfig',
    'essentials.apps.EssentialsConfig',
    'elastic_search.apps.ElasticSearchConfig',
    'messaging.apps.MessagingConfig',
    'cities_custom.apps.CitiesCustomConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'rentality.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rentality.wsgi.application'

# Custom User Model
AUTH_USER_MODEL = 'user_custom.User'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# User Uploaded files

MEDIA_URL = '/media/'

# FIXME: choose right security permissions api class
# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     # or allow read-only access for unauthenticated users.
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     ]
# }

# FIXME: site id for all auth
SITE_ID = 2

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/sign-in'

# Django all-auth
# http://django-allauth.readthedocs.io/en/latest/configuration.html
# ACCOUNT_ADAPTER = 'custom_package.all_auth_adapter.CustomAccountAdapter'
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # Login field
ACCOUNT_CONFIRM_EMAIL_ON_GET = False  # User has to click a button on the redirected page
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = LOGIN_REDIRECT_URL  # Redirect to '/'
ACCOUNT_EMAIL_REQUIRED = True  # Email required for signing up
ACCOUNT_EMAIL_SUBJECT_PREFIX = "Rentality.com - "
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 3600  # User is blocked for this time after failure to repeatedly log in
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'

# TODO: add config for other providers
# Social Account Providers setup  Docs - http://django-allauth.readthedocs.io/en/stable/providers.html
SOCIALACCOUNT_PROVIDERS = \
    {'facebook':
         {'METHOD': 'oauth2',
          'SCOPE': ['email', 'public_profile'],
          'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
          'FIELDS': [
              'id',
              'email',
              'name',
              'first_name',
              'last_name',
              'verified',
              'locale',
              'timezone',
              'link',
              'gender',
              'updated_time'
          ],
          'VERIFIED_EMAIL': False,
          'VERSION': 'v2.4'},
     'google':
         {'SCOPE': ['profile', 'email'],
          'AUTH_PARAMS': {'access_type': 'online'}}
     }

# Forms
# ACCOUNT_FORMS = {
#     'login': 'user_custom.forms.CustomLoginForm',
#     'signup': 'user_custom.forms.CustomSignupForm',
#     'change_password': 'user_custom.forms.CustomChangePasswordForm',
#     'set_password': 'user_custom.forms.CustomSetPasswordForm',
#     'add_email': 'user_custom.forms.CustomAddEmailForm',
#     'reset_password': 'user_custom.forms.CustomResetPasswordForm',
#     'reset_password_from_key': 'user_custom.forms.CustomResetPasswordKeyForm'
# }
OAUTH_DETAILS = get_env_var('OAUTH_DETAILS')

LIB_PATH = os.path.join(os.path.dirname(BASE_DIR), 'libs')

ASGI_APPLICATION = "rentality.routing.application"

# Django Cities settings
CITIES_DATA_DIR = os.path.join(LIB_PATH, 'geo_data')
CITIES_VALIDATE_POSTAL_CODES = False

# Debug toolbar settings
INTERNAL_IPS = ['localhost', '127.0.0.1']

# FormTools for Wizard - file storage
FORMTOOLS_STORAGE_LOCATION = os.path.join(MEDIA_ROOT, 'temp-wizard-storage')

DEFAULT_FROM_EMAIL = 'support@rentality.com.au'

from rest_framework import serializers


class CreateUpdateListSerializer(serializers.ListSerializer):
    """
    Refer to - https://www.django-rest-framework.org/api-guide/serializers/#customizing-listserializer-behavior

    The example in documentation needs some changes -
        -   Example : expects id (for database) from the frontend.
            Converted to : ID should be is read-only and is auto generated by the system.
        -   Example : Deletes are implicit while updating.
            Converted to : Cannot delete via update query and cannot mass delete. Updates cn only create or
            change values in reference to an id.
    """

    default_error_messages = {
        'invalid_parameter': 'Invalid Parameters',
    }

    @classmethod
    def init(cls, model):
        """
        Initialize this List serializer with parent model serializer
        :param model: ModelSerializer
        :return: Child class of CreateUpdateListSerializer
        """
        class _CustomListSerializer(cls):
            model_klass = model

        return _CustomListSerializer

    @property
    def model_klass(self):
        raise NotImplementedError

    def create(self, validated_data):
        data = [self.model_klass(**item) for item in validated_data]
        return self.model_klass.objects.bulk_create(data)

    def update(self, instances, validated_data):
        old_mapping = {item.id: item for item in instances}

        ret = []
        for data in validated_data:
            try:
                _id = data['id']
            except KeyError:
                ret.append(self.child.create(data))
            else:
                try:
                    ret.append(self.child.update(old_mapping[_id], data))
                except KeyError:
                    self.fail('invalid_parameter')
        # No deletions

        return ret

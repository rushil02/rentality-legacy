version: '3.6'
services:
  nginx:
    build: ./nginx
    image: 'rentality/nginx:latest'
    ports:
      - '8000:80'
    volumes:
      - './nginx/config/localhost.conf:/home/bin/online.conf'
      - './nginx/config/maintenance.dev.conf:/home/bin/maintenance.conf'
      - './nginx/bin/maintenance_site:/var/www/maintenance'
      - './static_dev/static_root:/var/www/static'
      - './static_dev/media_root:/var/www/media'
      - 'frontend_data:/var/www/rentality.com.au'
  postgres:
    image: 'mdillon/postgis:10-alpine'
    environment:
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
    ports:
      - '5431:5432'
    volumes:
      - './secrets/POSTGRES_USER:/run/secrets/POSTGRES_USER'
      - './secrets/POSTGRES_PASSWORD:/run/secrets/POSTGRES_PASSWORD'
      - './secrets/POSTGRES_DB:/run/secrets/POSTGRES_DB'
      - 'pgdata:/var/lib/postgresql/data'
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:6.4.2'
    environment:
      - cluster.name=rentality-cluster
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - 'esdata:/usr/share/elasticsearch/data'
    ports:
      - '9200:9200'
  kibana:
    image: 'docker.elastic.co/kibana/kibana:6.4.3'
    ports:
      - '5601:5601'
#    volumes:
#      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
  frontend:
    build:
      context: ./frontend
    image: 'rentality/frontend:latest'
    ports:
      - '3000:8000'
    volumes:
      - './frontend/app/src:/app/src'
      - 'frontend_data:/app/public'
      - 'frontend_cache:/app/.cache'
      - './secrets/COMM_ENV:/run/secrets/COMM_ENV'
    depends_on:
      - web
    entrypoint:
      - './bin/entrypoint.dev.sh'
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.web
    image: 'rentality/backend:latest'
    volumes:
      - './static_dev/static_root:/rentality/app/static_dev/static_root'
      - './static_dev/media_root:/rentality/app/static_dev/media_root'
      - './secrets:/run/secrets'
      - './backend/app/src:/rentality/app/src'
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
    ports:
      - '3002:8000'
    entrypoint:
      - './bin/web/entrypoint.dev.sh'
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.async-worker
    image: 'rentality/celery-worker:latest'
    volumes:
      - './static_dev/static_root:/rentality/static_dev/static_root'
      - './static_dev/media_root:/rentality/static_dev/media_root'
      - './secrets:/run/secrets'
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
  rabbitmq:
    image: 'rabbitmq:3.7.13-management'
    environment:
      RABBITMQ_DEFAULT_USER_FILE: /run/secrets/RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS_FILE: /run/secrets/RABBITMQ_DEFAULT_PASS
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - './secrets/RABBITMQ_DEFAULT_USER:/run/secrets/RABBITMQ_DEFAULT_USER'
      - './secrets/RABBITMQ_DEFAULT_PASS:/run/secrets/RABBITMQ_DEFAULT_PASS'
volumes:
  pgdata: null
  esdata: null
  frontend_data: null
  frontend_cache: null

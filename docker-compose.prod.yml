version: '3.6'
services:
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static:/static
      - media:/media
    depends_on:
      - web
    deploy:
      placement:
        constraints:
          - node.role == manager
  postgres:
    image: mdillon/postgis:9.5-alpine
    environment:
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
    ports:
      - 5432:5432
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.role == manager
  web:
    image: registry.gitlab.com/rushil0195/rentality/web:latest
    volumes:
      - static:/rentality/static_dev/static_root
      - media:/rentality/static_dev/media_root
    depends_on:
      - postgres
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - WEB_ENV
    deploy:
      # Number of Replicas in production
      replicas: 3
      resources:
        # cpus: Percentage of CPU usage
        # memory: Memory size
        # limits: Maximum allowable resources.
        limits:
          cpus: '0.3'
          memory: 200M
        # Minimum resources that are always allocated to a container. Uncomment if needed
        # reservations:
        #   cpus: '0.25'
        #   memory: 20M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3 # Default is never give up.
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
secrets:
  POSTGRES_USER:
    file: ./secrets/POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ./secrets/POSTGRES_PASSWORD
  POSTGRES_DB:
    file: ./secrets/POSTGRES_DB
  WEB_ENV:
    file: ./secrets/WEB_ENV
volumes: 
  pgdata:
  esdata:
  static:
  media: